<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Xander.PasswordValidator</name>
    </assembly>
    <members>
        <member name="T:Xander.PasswordValidator.WordListRegExBuilder">
            <summary>
            A builder that creates a fragment of a regular expression that is used
            to validate against a word list.
            </summary>
        </member>
        <member name="M:Xander.PasswordValidator.WordListRegExBuilder.GetRegularExpression(System.String)">
            <summary>
            Builds and returns a fragment of a regular expression.
            </summary>
            <param name="password">The password being validated</param>
            <returns>A fragment of regular expression</returns>
        </member>
        <member name="M:Xander.PasswordValidator.WordListRegExBuilder.RegExEncode(System.String)">
            <summary>
            Encodes a string as a regular expression so that the literal string can 
            be searched for in the word list.
            </summary>
            <param name="value">The string to be encoded.</param>
            <returns>The encoded string</returns>
        </member>
        <member name="T:Xander.PasswordValidator.CustomValidationHandler`1">
            <summary>
            Base class for validation handlers that require the Validator to pass in
            custom data to the handler.
            </summary>
            <typeparam name="TData">The type of the custom data</typeparam>
        </member>
        <member name="T:Xander.PasswordValidator.ValidationHandler">
            <summary>
            A handler that processes a single aspect of the validation process.
            </summary>
        </member>
        <member name="M:Xander.PasswordValidator.ValidationHandler.Validate(System.String)">
            <summary>
            Validates the password.
            </summary>
            <param name="password">The password being validated.</param>
            <returns>True if the password passes validation; false if it fails.</returns>
        </member>
        <member name="P:Xander.PasswordValidator.CustomValidationHandler`1.CustomData">
            <summary>
            Gets or Sets the strongly typed object that contains the custom data for this 
            validation handler
            </summary>
        </member>
        <member name="T:Xander.PasswordValidator.CustomWordListFactory">
            <summary>
            The factory that creates the class that retrieves the custom word lists
            </summary>
        </member>
        <member name="M:Xander.PasswordValidator.CustomWordListFactory.Configure(System.Func{System.String,System.String})">
            <summary>
            Configures the factory with the strategy for mapping the path to the
            actual location.
            </summary>
            <param name="mapPath">The function that maps the path to its actual location.</param>
        </member>
        <member name="T:Xander.PasswordValidator.IValidator">
            <summary>
            Defines a method to validate a password.
            </summary>
        </member>
        <member name="M:Xander.PasswordValidator.IValidator.Validate(System.String)">
            <summary>
            Checks the given password to ensure that it passes the validation rules
            that were given in the constructor.
            </summary>
            <param name="password">The password to check against the validation rules</param>
            <returns>true if the validation has passed and the password is suitable; 
            false indicates the password failed the validation.</returns>
        </member>
        <member name="T:Xander.PasswordValidator.Config.CustomWordListCollection">
            <summary>
            Represents a collection of custom list elements in the configuration file.
            </summary>
        </member>
        <member name="M:Xander.PasswordValidator.Config.CustomWordListCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key, in this case the file name.
            </summary>
            <param name="element">The element for which to get the key/file name.</param>
            <returns>The file name</returns>
        </member>
        <member name="M:Xander.PasswordValidator.Config.CustomWordListCollection.CreateNewElement">
            <summary>
            Creates a new <see cref="T:Xander.PasswordValidator.Config.CustomWordListItem"/>
            </summary>
            <returns>A newly created <see cref="T:Xander.PasswordValidator.Config.CustomWordListItem"/>.</returns>
        </member>
        <member name="M:Xander.PasswordValidator.Config.CustomWordListCollection.Add(System.String)">
            <summary>
            Adds a <see cref="T:System.String"/> representing the file name of the custom word list to the 
            collection.
            </summary>
            <param name="item">The string representing the file name to add.</param>
            <remarks>The underlying collection takes <see cref="T:Xander.PasswordValidator.Config.CustomWordListItem"/> which derives
            from <see cref="T:System.Configuration.ConfigurationElement"/>. However the <see cref="T:System.Collections.ICollection"/> 
            interface demands the string. This method creates a <see cref="T:Xander.PasswordValidator.Config.CustomWordListItem"/>
            internally.</remarks>
        </member>
        <member name="M:Xander.PasswordValidator.Config.CustomWordListCollection.Clear">
            <summary>
            Removes all configuration elements from the collection.
            </summary>
        </member>
        <member name="M:Xander.PasswordValidator.Config.CustomWordListCollection.Contains(System.String)">
            <summary>
            Determines whther an element is in the collection.
            </summary>
            <param name="item">The object to locate in this collection.</param>
            <returns>True if the item is found; otherwise false.</returns>
        </member>
        <member name="M:Xander.PasswordValidator.Config.CustomWordListCollection.CopyTo(System.String[],System.Int32)">
            <summary>
            Copies the collection, or a portion of it, to an array.
            </summary>
            <param name="array">The one-dimensional array that is the destination
            of the elements copies from this collection.</param>
            <param name="arrayIndex">The zero based index in the array at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex is less thatn zero.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in this collection is greater
            thatn the available space from arrayIndex to the end of the array.</exception>
        </member>
        <member name="M:Xander.PasswordValidator.Config.CustomWordListCollection.Remove(System.String)">
            <summary>
            Removes the first occurrence of a specific object from this collection
            </summary>
            <param name="item">The item to remove.</param>
            <returns>true is the item is successfully removed; otherwise false. This method
            also returns false if the item was not found in the collection.</returns>
        </member>
        <member name="P:Xander.PasswordValidator.Config.CustomWordListCollection.CollectionType">
            <summary>
            Specifies the type of the collection.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Config.CustomWordListCollection.System#Collections#Generic#ICollection{System#String}#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:Xander.PasswordValidator.Config.CustomWordListItem">
            <summary>
            Represents a custom word list in the config file.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Config.CustomWordListItem.File">
            <summary>
            The file representing the name of the custom word list.
            </summary>
            <remarks>
            The file can be an absolute or relative path.
            </remarks>
        </member>
        <member name="T:Xander.PasswordValidator.IWordListProcessOptions">
            <summary>
            Defines the options for the way that word lists are processed
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.IWordListProcessOptions.CheckForNumberSuffix">
            <summary>
            Gets or sets whether to check to see if the password is simply in the 
            word list with a digit appended.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.IWordListProcessOptions.CheckForDoubledUpWord">
            <summary>
            Gets of sets whether to check to see if the password is the same word
            written twice and is in a word list.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.IWordListProcessOptions.CheckForReversedWord">
            <summary>
            Gets or sets whether to check to see if the password is simply a 
            reversed form of a word that is in a word list.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.IWordListProcessOptions.CustomBuilders">
            <summary>
            Gets a collection of types of custom regular expression builders.
            </summary>
            <seealso cref="T:Xander.PasswordValidator.WordListRegExBuilder"/>
        </member>
        <member name="T:Xander.PasswordValidator.Config.StandardWordListCollection">
            <summary>
            Represents a collection of standard list elements in the configuration file.
            </summary>
        </member>
        <member name="M:Xander.PasswordValidator.Config.StandardWordListCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key, in this case the value from the <see cref="T:Xander.PasswordValidator.StandardWordList"/> enum.
            </summary>
            <param name="element">The element for which to get the key/standard word list.</param>
            <returns>The standard word list.</returns>
        </member>
        <member name="M:Xander.PasswordValidator.Config.StandardWordListCollection.CreateNewElement">
            <summary>
            Creates a new <see cref="T:Xander.PasswordValidator.Config.StandardWordListItem"/>
            </summary>
            <returns>A newly created <see cref="T:Xander.PasswordValidator.Config.StandardWordListItem"/>.</returns>
        </member>
        <member name="M:Xander.PasswordValidator.Config.StandardWordListCollection.Add(Xander.PasswordValidator.StandardWordList)">
            <summary>
            Adds a <see cref="T:Xander.PasswordValidator.Config.StandardWordListItem"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:Xander.PasswordValidator.StandardWordList"/> enum representing the item to 
            add</param>
        </member>
        <member name="M:Xander.PasswordValidator.Config.StandardWordListCollection.Clear">
            <summary>
            Removes all configuration elements from the collection.
            </summary>
        </member>
        <member name="M:Xander.PasswordValidator.Config.StandardWordListCollection.Contains(Xander.PasswordValidator.StandardWordList)">
            <summary>
            Determines whther an element is in the collection.
            </summary>
            <param name="item">The object to locate in this collection.</param>
            <returns>True if the item is found; otherwise false.</returns>
        </member>
        <member name="M:Xander.PasswordValidator.Config.StandardWordListCollection.CopyTo(Xander.PasswordValidator.StandardWordList[],System.Int32)">
            <summary>
            Copies the collection, or a portion of it, to an array.
            </summary>
            <param name="array">The one-dimensional array that is the destination
            of the elements copies from this collection.</param>
            <param name="arrayIndex">The zero based index in the array at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex is less thatn zero.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in this collection is greater
            thatn the available space from arrayIndex to the end of the array.</exception>
        </member>
        <member name="M:Xander.PasswordValidator.Config.StandardWordListCollection.Remove(Xander.PasswordValidator.StandardWordList)">
            <summary>
            Removes the first occurrence of a specific object from this collection
            </summary>
            <param name="item">The item to remove.</param>
            <returns>true is the item is successfully removed; otherwise false. This method
            also returns false if the item was not found in the collection.</returns>
        </member>
        <member name="P:Xander.PasswordValidator.Config.StandardWordListCollection.CollectionType">
            <summary>
            Specifies the type of the collection.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Config.StandardWordListCollection.System#Collections#Generic#ICollection{Xander#PasswordValidator#StandardWordList}#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:Xander.PasswordValidator.Config.StandardWordListItem">
            <summary>
            Represents a value in the config file for a standard word list.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Config.StandardWordListItem.Value">
            <summary>
            The standard word list value in the config file.
            </summary>
        </member>
        <member name="T:Xander.PasswordValidator.Config.WordListProcessOptionsElement">
            <summary>
            Defines the options in the config file for the way that word lists are processed.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Config.WordListProcessOptionsElement.CheckForNumberSuffix">
            <summary>
            Indicates whether the password should be checked to see if it is a
            word in the list with a digit appended to it.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Config.WordListProcessOptionsElement.CheckForDoubledUpWord">
            <summary>
            Indicates whether the password should be checked to see if it is a
            word in the list repeated.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Config.WordListProcessOptionsElement.CheckForReversedWord">
            <summary>
            Indicates whether the password should be checked to see if it is a
            word in the list in reverse.
            </summary>
        </member>
        <member name="T:Xander.PasswordValidator.Exceptions.CustomValidationFileException">
            <summary>
            Represents an error while retrieving custom word lists
            </summary>
        </member>
        <member name="T:Xander.PasswordValidator.Exceptions.PasswordValidatorException">
            <summary>
            Represents an error in the password validator.
            </summary>
        </member>
        <member name="M:Xander.PasswordValidator.Exceptions.PasswordValidatorException.#ctor(System.String)">
            <summary>
            Initialises a new instance of the PasswordValidatorException class with
            a specific error message.
            </summary>
            <param name="message">The message that describes the error</param>
        </member>
        <member name="M:Xander.PasswordValidator.Exceptions.PasswordValidatorException.#ctor(System.String,System.Exception)">
            <summary>
            Initialises a new instance of the PasswordValidatorException class with
            a specific error message and a reference to the inner exception that is
            the cause of this exception.
            </summary>
            <param name="message">The message that describes the error</param>
            <param name="innerException">The exception that is the cause of the 
            current exception, or a null reference if no inner exception is 
            specified.</param>
        </member>
        <member name="M:Xander.PasswordValidator.Exceptions.PasswordValidatorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initialises a new instance of the PasswordValidatorException class with
            a serialised data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized 
            object data about the exception being thrown. </param>
            <param name="context">The StreamingContext that contains contextual
            information about the source or destination. </param>
        </member>
        <member name="M:Xander.PasswordValidator.Exceptions.CustomValidationFileException.#ctor(System.String,System.String)">
            <summary>
            Initialises a new instance of the CustomValidationFileException class with
            a specific error message.
            </summary>
            <param name="message">The message that describes the error</param>
            <param name="fileName">The name of the file that caused the issue.</param>
        </member>
        <member name="M:Xander.PasswordValidator.Exceptions.CustomValidationFileException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initialises a new instance of the CustomValidationFileException class with
            a specific error message and inner exception.
            </summary>
            <param name="message">The message that describes the error</param>
            <param name="fileName">The name of the file that caused the issue.</param>
            <param name="innerException">The exception that caused this error.</param>
        </member>
        <member name="M:Xander.PasswordValidator.Exceptions.CustomValidationFileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initialises a new instance of the CustomValidationFileException class with
            a serialised data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized 
            object data about the exception being thrown. </param>
            <param name="context">The StreamingContext that contains contextual
            information about the source or destination. </param>
        </member>
        <member name="P:Xander.PasswordValidator.Exceptions.CustomValidationFileException.FileName">
            <summary>
            The name of the offending file.
            </summary>
        </member>
        <member name="T:Xander.PasswordValidator.IPasswordValidationSettings">
            <summary>
            Defines the settings used to configure the password validator.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.IPasswordValidationSettings.MinimumPasswordLength">
            <summary>
            Gets or sets the minimum number of character that a password is permitted to be.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.IPasswordValidationSettings.NeedsNumber">
            <summary>
            Gets or sets whether a password must contain a number.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.IPasswordValidationSettings.NeedsLetter">
            <summary>
            Gets or sets whether a password must contain a letter.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.IPasswordValidationSettings.NeedsSymbol">
            <summary>
            Gets or sets whether a password must contain a symbol.
            </summary>
            <remarks>A symbol is defined as any character that is not a letter or a digit.</remarks>
        </member>
        <member name="P:Xander.PasswordValidator.IPasswordValidationSettings.StandardWordLists">
            <summary>
            Gets a collection of standard word lists that the validator is to check against.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.IPasswordValidationSettings.CustomWordLists">
            <summary>
            Gets a collection of custom word lists that the validator is to check against.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.IPasswordValidationSettings.WordListProcessOptions">
            <summary>
            Gets the options with which the word lists are to be processed.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.IPasswordValidationSettings.CustomValidators">
            <summary>
            Gets a collection of custom validators to use to check the password.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.IPasswordValidationSettings.CustomData">
            <summary>
            Gets the dictionary that holds the data used to pass to custom validators.
            </summary>
        </member>
        <member name="T:Xander.PasswordValidator.Config.PasswordValidationSection">
            <summary>
            Represents the validation rules in the config file.
            </summary>
        </member>
        <member name="M:Xander.PasswordValidator.Config.PasswordValidationSection.Get">
            <summary>
            Gets the password validation configuration from the config file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xander.PasswordValidator.Config.PasswordValidationSection.Refresh">
            <summary>
            Refreshes the password validation rules from the config file.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Config.PasswordValidationSection.MinimumPasswordLength">
            <summary>
            Gets or sets the minimum number of character that a password is permitted to be.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Config.PasswordValidationSection.NeedsNumber">
            <summary>
            Gets or sets whether a password must contain a number.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Config.PasswordValidationSection.NeedsLetter">
            <summary>
            Gets or sets whether a password must contain a letter.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Config.PasswordValidationSection.NeedsSymbol">
            <summary>
            Gets or sets whether a password must contain a symbol.
            </summary>
            <remarks>A symbol is defined as any character that is not a letter or a digit.</remarks>
        </member>
        <member name="P:Xander.PasswordValidator.Config.PasswordValidationSection.StandardWordLists">
            <summary>
            Gets a collection of <see cref="T:Xander.PasswordValidator.Config.StandardWordListItem"/> objects that the validator is to 
            check against.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Config.PasswordValidationSection.Xander#PasswordValidator#IPasswordValidationSettings#StandardWordLists">
            <summary>
            Gets a collection of standard word lists that the validator is to check against.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Config.PasswordValidationSection.CustomWordLists">
            <summary>
            Gets a collection of <see cref="T:Xander.PasswordValidator.Config.CustomWordListItem"/> objects that the validator is to 
            check against.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Config.PasswordValidationSection.Xander#PasswordValidator#IPasswordValidationSettings#CustomWordLists">
            <summary>
            Gets a collection of custom word lists that the validator is to check against.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Config.PasswordValidationSection.WordListProcessOptions">
            <summary>
            Gets the options with which the word lists are to be processed.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Config.PasswordValidationSection.Xander#PasswordValidator#IPasswordValidationSettings#WordListProcessOptions">
            <summary>
            Gets the options with which the word lists are to be processed.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Config.PasswordValidationSection.Xander#PasswordValidator#IPasswordValidationSettings#CustomValidators">
            <summary>
            Gets a collection of custom validators to use to check the password.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Config.PasswordValidationSection.CustomData">
            <summary>
            Gets the dictionary that holds the data used to pass to custom validators.
            </summary>
        </member>
        <member name="T:Xander.PasswordValidator.Exceptions.PasswordValidatorConfigException">
            <summary>
            Represents an error in the configuration of the password validator
            </summary>
        </member>
        <member name="M:Xander.PasswordValidator.Exceptions.PasswordValidatorConfigException.#ctor(System.String)">
            <summary>
            Initialises a new instance of the PasswordValidatorConfigException class with
            a specific error message.
            </summary>
            <param name="message">The message that describes the error</param>
        </member>
        <member name="M:Xander.PasswordValidator.Exceptions.PasswordValidatorConfigException.#ctor(System.String,System.Exception)">
            <summary>
            Initialises a new instance of the PasswordValidatorConfigException class with
            a specific error message and a reference to the inner exception that is
            the cause of this exception.
            </summary>
            <param name="message">The message that describes the error</param>
            <param name="innerException">The exception that is the cause of the 
            current exception, or a null reference if no inner exception is 
            specified.</param>
        </member>
        <member name="M:Xander.PasswordValidator.Exceptions.PasswordValidatorConfigException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initialises a new instance of the PasswordValidatorConfigException class with
            a serialised data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized 
            object data about the exception being thrown. </param>
            <param name="context">The StreamingContext that contains contextual
            information about the source or destination. </param>
        </member>
        <member name="T:Xander.PasswordValidator.PasswordValidationSettings">
            <summary>
            Defines the settings used to configure the password validator.
            </summary>
        </member>
        <member name="M:Xander.PasswordValidator.PasswordValidationSettings.#ctor">
            <summary>
            Constructs an instance of the PasswordValidationSettings class
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.PasswordValidationSettings.MinimumPasswordLength">
            <summary>
            Gets or Sets the minimum length a password is permitted to be.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.PasswordValidationSettings.NeedsNumber">
            <summary>
            Gets or sets whether a password requires a number in it.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.PasswordValidationSettings.NeedsLetter">
            <summary>
            Gets or sets whether a password requires a letter in it.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.PasswordValidationSettings.NeedsSymbol">
            <summary>
            Gets of sets whether a password requires a symbol in it.
            </summary>
            <remarks>For the purpose of the validator a symbol is any character 
            that is not a letter or a number. This is not the same definition
            that is used by <see cref="M:System.Char.IsSymbol(System.Char)"/></remarks>
        </member>
        <member name="P:Xander.PasswordValidator.PasswordValidationSettings.StandardWordLists">
            <summary>
            Gets a collection of standard word lists that the validator is to check against.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.PasswordValidationSettings.CustomWordLists">
            <summary>
            Gets a collection of custom word lists that the validator is to check against.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.PasswordValidationSettings.CustomValidators">
            <summary>
            Gets a collection of custom validators to use to check the password.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.PasswordValidationSettings.CustomSettings">
            <summary>
            Gets the dictionary that holds the data used to pass to custom validators.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.PasswordValidationSettings.WordListProcessOptions">
            <summary>
            Gets the options with which the word lists are to be processed.
            </summary>
        </member>
        <member name="T:Xander.PasswordValidator.Resources.WordLists">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Resources.WordLists.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Resources.WordLists.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Resources.WordLists.__License_Information__">
             <summary>
               Looks up a localized string similar to Copyright (C) 2013 Colin Angus Mackay
            
            Permission is hereby granted, free of charge, to any person obtaining a copy
            of this software and associated documentation files (the &quot;Software&quot;), to 
            deal in the Software without restriction, including without limitation the 
            rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
            sell copies of the Software, and to permit persons to whom the Software is
            furnished to do so, subject to the following conditions:
            
            The above copyright notice a [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Resources.WordLists.FemaleNames">
             <summary>
               Looks up a localized string similar to aaren
            aarika
            aaron
            abagael
            abagail
            abbe
            abbey
            abbi
            abbie
            abby
            abbye
            abigael
            abigail
            abigale
            abra
            acacia
            ada
            adah
            adaline
            adam
            adan
            adara
            adda
            addi
            addia
            addie
            addy
            adel
            adela
            adelaida
            adelaide
            adele
            adelheid
            adelia
            adelice
            adelina
            adelind
            adeline
            adell
            adella
            adelle
            adena
            adey
            adi
            adiana
            adina
            adora
            adore
            adoree
            adorne
            adrea
            adria
            adriaens
            adrian
            adriana
            adriane
            adrianna
            adrianne
            adrien
            adriena
            adriene
            adrienne
            aeriel
            aeriela
            aeriell
            afton
            ag
            agace
            agata
            agatha
            agathe
            aggi
            aggie
            aggy
            agna
            agnella
            agnes
            agne [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Resources.WordLists.MaleNames">
             <summary>
               Looks up a localized string similar to aaron
            ab
            abba
            abbe
            abbey
            abbie
            abbot
            abbott
            abby
            abdel
            abdul
            abe
            abel
            abelard
            abeu
            abey
            abie
            abner
            abraham
            abrahan
            abram
            abramo
            abran
            ad
            adair
            adam
            adamo
            adams
            adan
            addie
            addison
            addy
            ade
            adelbert
            adham
            adlai
            adler
            ado
            adolf
            adolph
            adolphe
            adolpho
            adolphus
            adrian
            adriano
            adrien
            agosto
            aguie
            aguistin
            aguste
            agustin
            aharon
            ahmad
            ahmed
            ailbert
            akim
            aksel
            al
            alain
            alair
            alan
            aland
            alano
            alanson
            alard
            alaric
            alasdair
            alastair
            alasteir
            alaster
            alberik
            albert
            alberto
            albie
            albrecht
            alden
            aldin
            aldis
            aldo
            aldon
            ald [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Resources.WordLists.MostCommon500Passwords">
             <summary>
               Looks up a localized string similar to 123456
            password
            12345678
            1234
            pussy
            12345
            dragon
            qwerty
            696969
            mustang
            letmein
            baseball
            master
            michael
            football
            shadow
            monkey
            abc123
            pass
            fuckme
            6969
            jordan
            harley
            ranger
            iwantu
            jennifer
            hunter
            fuck
            2000
            test
            batman
            trustno1
            thomas
            tigger
            robert
            access
            love
            buster
            1234567
            soccer
            hockey
            killer
            george
            sexy
            andrew
            charlie
            superman
            asshole
            fuckyou
            dallas
            jessica
            panties
            pepper
            1111
            austin
            william
            daniel
            golfer
            summer
            heather
            hammer
            yankees
            joshua
            maggie
            biteme
            enter
            ashley
            thunder
            cowboy
            silver
            richard
            fucker
            o [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Xander.PasswordValidator.Resources.WordLists.Surnames">
             <summary>
               Looks up a localized string similar to Aaberg
            Aaron
            Abarca
            Abbate
            Abbess
            Abbott
            Abbratozzato
            Abdelnour
            Abderrazzaq
            Abdollah
            Abdous
            Abdullah
            Abdulrazak
            Abe
            Abel
            Abelmann
            Abelson
            Abernathy
            Abnet
            Abraham
            Abraham-Scalapino
            Abrams
            Abramson
            Abromson-Leeman
            Aburdene
            Acambages
            Accardo
            Accomazzi
            Achacoso
            Acker
            Ackerly
            Ackerman
            Acus
            Adair
            Adam
            Adame
            Adams
            Adamson
            Addison
            Ade
            Adelson
            Adelstein
            Adibe
            Adicho
            Adiele
            Adler
            Adolph
            Adorno
            Adourian
            Adrian-Haberly
            Affricano
            Africa
            Aftergut
            Afzal-Khan
            Agee
            Aghayan
            Agostinelli
            Agrawal
            Agren
            Agresti
            Agro&apos;
            Agterberg
            A [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="T:Xander.PasswordValidator.StandardWordList">
            <summary>
            Defines constants for referencing internal word lists.
            </summary>
        </member>
        <member name="F:Xander.PasswordValidator.StandardWordList.FemaleNames">
            <summary>
            A word list containing female names.
            </summary>
        </member>
        <member name="F:Xander.PasswordValidator.StandardWordList.MaleNames">
            <summary>
            A word list containing male names
            </summary>
        </member>
        <member name="F:Xander.PasswordValidator.StandardWordList.MostCommon500Passwords">
            <summary>
            A word list containing the 500 most common passwords.
            </summary>
        </member>
        <member name="F:Xander.PasswordValidator.StandardWordList.Surnames">
            <summary>
            A word list containing surnames.
            </summary>
        </member>
        <member name="T:Xander.PasswordValidator.Validator">
            <summary>
            The Validator class is the main entry point for applications to validate 
            a password.
            </summary>
        </member>
        <member name="M:Xander.PasswordValidator.Validator.#ctor(Xander.PasswordValidator.IPasswordValidationSettings)">
            <summary>
            Constructs an instance of the `Validator` class using the settings passed 
            into the constructor.
            </summary>
            <param name="settings">The settings that define the rules by which
            to validate a password.</param>
        </member>
        <member name="M:Xander.PasswordValidator.Validator.#ctor">
            <summary>
            Constructs an instance of the `Validator` class using the settings in 
            the application's .config file.
            </summary>
        </member>
        <member name="M:Xander.PasswordValidator.Validator.Validate(System.String)">
            <summary>
            Checks the given password to ensure that it passes the validation rules
            that were given in the constructor.
            </summary>
            <param name="password">The password to check against the validation rules</param>
            <returns>true if the validation has passed and the password is suitable; 
            false indicates the password failed the validation.</returns>
        </member>
        <member name="T:Xander.PasswordValidator.WordListProcessOptions">
            <summary>
            Represents the options used when processing word lists.
            </summary>
        </member>
        <member name="M:Xander.PasswordValidator.WordListProcessOptions.#ctor">
            <summary>
            Instantiates the new WordLisrtProcessOptions class.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.WordListProcessOptions.CheckForNumberSuffix">
            <summary>
            Indicates whether the password should be checked to see if it is a
            word in the list with a digit appended to it.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.WordListProcessOptions.CheckForDoubledUpWord">
            <summary>
            Indicates whether the password should be checked to see if it is a
            word in the list repeated.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.WordListProcessOptions.CheckForReversedWord">
            <summary>
            Indicates whether the password should be checked to see if it is a
            word in the list in reverse.
            </summary>
        </member>
        <member name="P:Xander.PasswordValidator.WordListProcessOptions.CustomBuilders">
            <summary>
            Gets a collection of types of custom regular expression builders.
            </summary>
            <seealso cref="T:Xander.PasswordValidator.WordListRegExBuilder"/>
        </member>
    </members>
</doc>
